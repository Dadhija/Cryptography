# -*- coding: utf-8 -*-
"""Homework 2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ycKQLO3TNRo6hUnD26qtY2jnJJKJCA0F
"""

import numpy as np

UID = 119186367
First_Name = "Dadhija"
Last_Name = "Patel"

def vigenere_enc(text, key):
  x = text.upper()
  x = x.replace(" ","")
  k = key.upper()
  length = len(k)
  cipher=""
  count=0
  key_count=0
  while count<len(x):
    ascii = ord(x[count])
    shift = ord(k[key_count%length])
    temp = (ascii-65+shift-65)%26
    temp+=65
    cipher = cipher + chr(temp)
    count+=1
    key_count+=1
  return cipher

def vigenere_dec(text, key):
  x = text.upper()
  x = x.replace(" ","")
  k = key.upper()
  length = len(k)
  plain=""
  count=0
  key_count=0
  while count<len(x):
    ascii = ord(x[count])
    shift = ord(k[key_count%length])
    temp = (ascii-shift)%26
    temp+=65
    plain = plain + chr(temp)
    count+=1
    key_count+=1
  return plain

def Hill_enc(M,plaintext):
  x = plaintext.upper()
  x = x.replace(" ","")
  cipher=""
  add = len(x)%3
  if add==1:
    x=x+"XX"
  elif add==2:
    x=x+"X"
  count=0
  while count<len(x):
    p1 = ord(x[count])-65
    p2 = ord(x[(count+1)])-65
    p3 = ord(x[(count+2)])-65

    matrix1 = [p1,p2,p3]
    matrix2 = M

    part_c = matrix1 @ matrix2
    cipher+=chr((part_c[0]%26)+65)+chr((part_c[1]%26)+65)+chr((part_c[2]%26)+65)
    count+=3
  return cipher



if __name__ == "__main__":
  text = "Test String"
  cipher_text = vigenere_enc(text, "KEY")
  print(cipher_text)

  plain_text = vigenere_dec(cipher_text,"KEY")
  print(plain_text)

  M = np.array([[17,17,5],[21,18,21],[2,2,19]])
  c_text = Hill_enc(M,text)
  print(c_text)